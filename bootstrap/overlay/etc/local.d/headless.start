#!/bin/sh

# Redirect stdout and errors to console as rc.local does not log anything
exec 1>/dev/console 2>&1

mkdir /tmp/.trash
ovlpath=$( find /media -type d -path '*/.*' -prune -o -type f -name *.apkovl.tar.gz -exec dirname {} \; | head -1 )

logger -st ${0##*/} "Setting up network interfaces..."
for dev in $(ls /sys/class/net)
do
	case ${dev%%[0-9]*} in
		lo)
				cat <<-EOF >> /etc/network/interfaces
				auto $dev
				iface $dev inet loopback

				EOF
				;;
		eth)
				cat <<-EOF >> /etc/network/interfaces
				auto $dev
				iface $dev inet dhcp

				EOF
				;;
	esac
done

echo "Set up network interfaces:"
cat /etc/network/interfaces

cp "${ovlpath}/hostname" /etc/hostname
hostname -F /etc/hostname
rc-service networking start


## Set up packages
cp /etc/apk/repositories /etc/apk/repositories_backup
echo "http://dl-cdn.alpinelinux.org/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/main/" >> /etc/apk/repositories
echo "http://dl-cdn.alpinelinux.org/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/community/" >> /etc/apk/repositories
apk update

## Create users with SSH access
logger -st ${0##*/} "Installing sudo package..."
apk add sudo > /root/sudo.log
for username in $( ls /etc/pubkeys )
do
    logger -st ${0##*/} "Creating user $username..."
    adduser $username --disabled-password
    mkdir -p /home/$username/.ssh
    cat /etc/pubkeys/$username >> /home/$username/.ssh/authorized_keys
    echo "tt  ALL=(ALL)  NOPASSWD: ALL" > /etc/sudoers.d/tt
done




## Setup temporary SSH server (root login, no password)
## we use some bundled keys to avoid generation at boot and save time
## bundled temporary keys are moved in /tmp so they won't be stored
## within permanent config later (new ones will then be generated)
apk add openssh

cp /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
cat <<-EOF >> /etc/ssh/sshd_config
		AuthorizedKeysFile      .ssh/authorized_keys
		PermitEmptyPasswords no
		PasswordAuthentication no
		KbdInteractiveAuthentication no
		AllowTcpForwarding no
		GatewayPorts no
		X11Forwarding no
		UsePAM yes
		Subsystem       sftp    /usr/lib/ssh/sftp-server
	EOF

rc-service sshd start
/etc/init.d/sshd start

## Prep for final post-cleanup
cat <<-EOF > /tmp/.trash/post-cleanup
	#!/bin/sh
	logger -st ${0##*/} "Cleaning-up..."
	# mv /etc/ssh/sshd_config.orig /etc/ssh/sshd_config
	# mv /etc/conf.d/sshd.orig /etc/conf.d/sshd
	rm /etc/modules-load.d/g_ether.conf
	rm /etc/modprobe.d/g_ether.conf
	rc-update del local default
	rm /etc/local.d/headless.start

	logger -st ${0##*/} "Done !!"
	EOF

chmod +x /tmp/.trash/post-cleanup
exec /tmp/.trash/post-cleanup

